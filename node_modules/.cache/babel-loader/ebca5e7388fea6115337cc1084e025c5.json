{"ast":null,"code":"import BaseSelection from \"./baseSelection\"; //import Text from './text'\n//import File from './file'\n//import Checkbox from './checkbox'\n//import Switch from './switch'\n\nimport Util from \"./util\";\n\nconst Radio = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = \"radio\";\n  const DATA_KEY = `bmd.${NAME}`;\n  const JQUERY_NAME = `bmd${NAME.charAt(0).toUpperCase() + NAME.slice(1)}`;\n  const JQUERY_NO_CONFLICT = $.fn[JQUERY_NAME];\n  const Default = {\n    template: `<span class='bmd-radio'></span>`\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Radio extends BaseSelection {\n    constructor($element, config, properties = {\n      inputType: NAME,\n      outerClass: NAME\n    }) {\n      super($element, $.extend(true, //{invalidComponentMatches: [Checkbox, File, Switch, Text]},\n      Default, config), properties);\n    }\n\n    dispose(dataKey = DATA_KEY) {\n      super.dispose(dataKey);\n    }\n\n    static matches($element) {\n      // '.radio > label > input[type=radio]'\n      if ($element.attr(\"type\") === \"radio\") {\n        return true;\n      }\n\n      return false;\n    }\n\n    static rejectMatch(component, $element) {\n      Util.assert(this.$element, this.matches($element), `${component} component element ${Util.describe($element)} is invalid for type='radio'.`);\n    } // ------------------------------------------------------------------------\n    // protected\n    //decorateMarkup() {\n    //  this.$element.after(this.config.template)\n    //}\n    // ------------------------------------------------------------------------\n    // private\n    // ------------------------------------------------------------------------\n    // static\n\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let $element = $(this);\n        let data = $element.data(DATA_KEY);\n\n        if (!data) {\n          data = new Radio($element, config);\n          $element.data(DATA_KEY, data);\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n\n  $.fn[JQUERY_NAME] = Radio._jQueryInterface;\n  $.fn[JQUERY_NAME].Constructor = Radio;\n\n  $.fn[JQUERY_NAME].noConflict = () => {\n    $.fn[JQUERY_NAME] = JQUERY_NO_CONFLICT;\n    return Radio._jQueryInterface;\n  };\n\n  return Radio;\n})(jQuery);\n\nexport default Radio;","map":{"version":3,"sources":["/Users/aaron/Desktop/my-app/node_modules/bootstrap-material-design/js/radio.js"],"names":["BaseSelection","Util","Radio","$","NAME","DATA_KEY","JQUERY_NAME","charAt","toUpperCase","slice","JQUERY_NO_CONFLICT","fn","Default","template","constructor","$element","config","properties","inputType","outerClass","extend","dispose","dataKey","matches","attr","rejectMatch","component","assert","describe","_jQueryInterface","each","data","Constructor","noConflict","jQuery"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,CAACC,CAAC,IAAI;AAClB;;;;;AAKA,QAAMC,IAAI,GAAG,OAAb;AACA,QAAMC,QAAQ,GAAI,OAAMD,IAAK,EAA7B;AACA,QAAME,WAAW,GAAI,MAAKF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BJ,IAAI,CAACK,KAAL,CAAW,CAAX,CAAc,EAAvE;AACA,QAAMC,kBAAkB,GAAGP,CAAC,CAACQ,EAAF,CAAKL,WAAL,CAA3B;AAEA,QAAMM,OAAO,GAAG;AACdC,IAAAA,QAAQ,EAAG;AADG,GAAhB;AAIA;;;;;;AAKA,QAAMX,KAAN,SAAoBF,aAApB,CAAkC;AAChCc,IAAAA,WAAW,CACTC,QADS,EAETC,MAFS,EAGTC,UAAU,GAAG;AAAEC,MAAAA,SAAS,EAAEd,IAAb;AAAmBe,MAAAA,UAAU,EAAEf;AAA/B,KAHJ,EAIT;AACA,YACEW,QADF,EAEEZ,CAAC,CAACiB,MAAF,CACE,IADF,EAEE;AACAR,MAAAA,OAHF,EAIEI,MAJF,CAFF,EAQEC,UARF;AAUD;;AAEDI,IAAAA,OAAO,CAACC,OAAO,GAAGjB,QAAX,EAAqB;AAC1B,YAAMgB,OAAN,CAAcC,OAAd;AACD;;AAED,WAAOC,OAAP,CAAeR,QAAf,EAAyB;AACvB;AACA,UAAIA,QAAQ,CAACS,IAAT,CAAc,MAAd,MAA0B,OAA9B,EAAuC;AACrC,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;AAED,WAAOC,WAAP,CAAmBC,SAAnB,EAA8BX,QAA9B,EAAwC;AACtCd,MAAAA,IAAI,CAAC0B,MAAL,CACE,KAAKZ,QADP,EAEE,KAAKQ,OAAL,CAAaR,QAAb,CAFF,EAGG,GAAEW,SAAU,sBAAqBzB,IAAI,CAAC2B,QAAL,CAChCb,QADgC,CAEhC,+BALJ;AAOD,KAtC+B,CAwChC;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AACA,WAAOc,gBAAP,CAAwBb,MAAxB,EAAgC;AAC9B,aAAO,KAAKc,IAAL,CAAU,YAAW;AAC1B,YAAIf,QAAQ,GAAGZ,CAAC,CAAC,IAAD,CAAhB;AACA,YAAI4B,IAAI,GAAGhB,QAAQ,CAACgB,IAAT,CAAc1B,QAAd,CAAX;;AAEA,YAAI,CAAC0B,IAAL,EAAW;AACTA,UAAAA,IAAI,GAAG,IAAI7B,KAAJ,CAAUa,QAAV,EAAoBC,MAApB,CAAP;AACAD,UAAAA,QAAQ,CAACgB,IAAT,CAAc1B,QAAd,EAAwB0B,IAAxB;AACD;AACF,OARM,CAAP;AASD;;AA9D+B;AAiElC;;;;;;;AAKA5B,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,IAAoBJ,KAAK,CAAC2B,gBAA1B;AACA1B,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,EAAkB0B,WAAlB,GAAgC9B,KAAhC;;AACAC,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,EAAkB2B,UAAlB,GAA+B,MAAM;AACnC9B,IAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,IAAoBI,kBAApB;AACA,WAAOR,KAAK,CAAC2B,gBAAb;AACD,GAHD;;AAKA,SAAO3B,KAAP;AACD,CAlGa,EAkGXgC,MAlGW,CAAd;;AAoGA,eAAehC,KAAf","sourcesContent":["import BaseSelection from \"./baseSelection\";\n//import Text from './text'\n//import File from './file'\n//import Checkbox from './checkbox'\n//import Switch from './switch'\nimport Util from \"./util\";\n\nconst Radio = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = \"radio\";\n  const DATA_KEY = `bmd.${NAME}`;\n  const JQUERY_NAME = `bmd${NAME.charAt(0).toUpperCase() + NAME.slice(1)}`;\n  const JQUERY_NO_CONFLICT = $.fn[JQUERY_NAME];\n\n  const Default = {\n    template: `<span class='bmd-radio'></span>`\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n  class Radio extends BaseSelection {\n    constructor(\n      $element,\n      config,\n      properties = { inputType: NAME, outerClass: NAME }\n    ) {\n      super(\n        $element,\n        $.extend(\n          true,\n          //{invalidComponentMatches: [Checkbox, File, Switch, Text]},\n          Default,\n          config\n        ),\n        properties\n      );\n    }\n\n    dispose(dataKey = DATA_KEY) {\n      super.dispose(dataKey);\n    }\n\n    static matches($element) {\n      // '.radio > label > input[type=radio]'\n      if ($element.attr(\"type\") === \"radio\") {\n        return true;\n      }\n      return false;\n    }\n\n    static rejectMatch(component, $element) {\n      Util.assert(\n        this.$element,\n        this.matches($element),\n        `${component} component element ${Util.describe(\n          $element\n        )} is invalid for type='radio'.`\n      );\n    }\n\n    // ------------------------------------------------------------------------\n    // protected\n\n    //decorateMarkup() {\n    //  this.$element.after(this.config.template)\n    //}\n\n    // ------------------------------------------------------------------------\n    // private\n\n    // ------------------------------------------------------------------------\n    // static\n    static _jQueryInterface(config) {\n      return this.each(function() {\n        let $element = $(this);\n        let data = $element.data(DATA_KEY);\n\n        if (!data) {\n          data = new Radio($element, config);\n          $element.data(DATA_KEY, data);\n        }\n      });\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  $.fn[JQUERY_NAME] = Radio._jQueryInterface;\n  $.fn[JQUERY_NAME].Constructor = Radio;\n  $.fn[JQUERY_NAME].noConflict = () => {\n    $.fn[JQUERY_NAME] = JQUERY_NO_CONFLICT;\n    return Radio._jQueryInterface;\n  };\n\n  return Radio;\n})(jQuery);\n\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}