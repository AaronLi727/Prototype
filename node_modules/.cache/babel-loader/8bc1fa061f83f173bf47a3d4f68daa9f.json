{"ast":null,"code":"import Util from \"./util\";\n\nconst Ripples = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = \"ripples\";\n  const DATA_KEY = `bmd.${NAME}`;\n  const JQUERY_NAME = `bmd${NAME.charAt(0).toUpperCase() + NAME.slice(1)}`;\n  const JQUERY_NO_CONFLICT = $.fn[JQUERY_NAME];\n  const ClassName = {\n    CONTAINER: \"ripple-container\",\n    DECORATOR: \"ripple-decorator\"\n  };\n  const Selector = {\n    CONTAINER: `.${ClassName.CONTAINER}`,\n    DECORATOR: `.${ClassName.DECORATOR}` //,\n\n  };\n  const Default = {\n    container: {\n      template: `<div class='${ClassName.CONTAINER}'></div>`\n    },\n    decorator: {\n      template: `<div class='${ClassName.DECORATOR}'></div>`\n    },\n    trigger: {\n      start: \"mousedown touchstart\",\n      end: \"mouseup mouseleave touchend\"\n    },\n    touchUserAgentRegex: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i,\n    duration: 500\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Ripples {\n    constructor($element, config) {\n      this.$element = $element; // console.log(`Adding ripples to ${Util.describe(this.$element)}`)  // eslint-disable-line no-console\n\n      this.config = $.extend(true, {}, Default, config); // attach initial listener\n\n      this.$element.on(this.config.trigger.start, event => {\n        this._onStartRipple(event);\n      });\n    }\n\n    dispose() {\n      this.$element.data(DATA_KEY, null);\n      this.$element = null;\n      this.$container = null;\n      this.$decorator = null;\n      this.config = null;\n    } // ------------------------------------------------------------------------\n    // private\n\n\n    _onStartRipple(event) {\n      // Verify if the user is just touching on a device and return if so\n      if (this._isTouch() && event.type === \"mousedown\") {\n        return;\n      } // Find or create the ripple container element\n\n\n      this._findOrCreateContainer(); // Get relY and relX positions of the container element\n\n\n      let relY = this._getRelY(event);\n\n      let relX = this._getRelX(event); // If relY and/or relX are false, return the event\n\n\n      if (!relY && !relX) {\n        return;\n      } // set the location and color each time (even if element is cached)\n\n\n      this.$decorator.css({\n        left: relX,\n        top: relY,\n        \"background-color\": this._getRipplesColor()\n      }); // Make sure the ripple has the styles applied (ugly hack but it works)\n\n      this._forceStyleApplication(); // Turn on the ripple animation\n\n\n      this.rippleOn(); // Call the rippleEnd function when the transition 'on' ends\n\n      setTimeout(() => {\n        this.rippleEnd();\n      }, this.config.duration); // Detect when the user leaves the element to cleanup if not already done?\n\n      this.$element.on(this.config.trigger.end, () => {\n        if (this.$decorator) {\n          // guard against race condition/mouse attack\n          this.$decorator.data(\"mousedown\", \"off\");\n\n          if (this.$decorator.data(\"animating\") === \"off\") {\n            this.rippleOut();\n          }\n        }\n      });\n    }\n\n    _findOrCreateContainer() {\n      if (!this.$container || !this.$container.length > 0) {\n        this.$element.append(this.config.container.template);\n        this.$container = this.$element.find(Selector.CONTAINER);\n      } // always add the rippleElement, it is always removed\n\n\n      this.$container.append(this.config.decorator.template);\n      this.$decorator = this.$container.find(Selector.DECORATOR);\n    } // Make sure the ripple has the styles applied (ugly hack but it works)\n\n\n    _forceStyleApplication() {\n      return window.getComputedStyle(this.$decorator[0]).opacity;\n    }\n    /**\n     * Get the relX\n     */\n\n\n    _getRelX(event) {\n      let wrapperOffset = this.$container.offset();\n      let result = null;\n\n      if (!this._isTouch()) {\n        // Get the mouse position relative to the ripple wrapper\n        result = event.pageX - wrapperOffset.left;\n      } else {\n        // Make sure the user is using only one finger and then get the touch\n        //  position relative to the ripple wrapper\n        event = event.originalEvent;\n\n        if (event.touches.length === 1) {\n          result = event.touches[0].pageX - wrapperOffset.left;\n        } else {\n          result = false;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Get the relY\n     */\n\n\n    _getRelY(event) {\n      let containerOffset = this.$container.offset();\n      let result = null;\n\n      if (!this._isTouch()) {\n        /**\n         * Get the mouse position relative to the ripple wrapper\n         */\n        result = event.pageY - containerOffset.top;\n      } else {\n        /**\n         * Make sure the user is using only one finger and then get the touch\n         * position relative to the ripple wrapper\n         */\n        event = event.originalEvent;\n\n        if (event.touches.length === 1) {\n          result = event.touches[0].pageY - containerOffset.top;\n        } else {\n          result = false;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Get the ripple color\n     */\n\n\n    _getRipplesColor() {\n      let color = this.$element.data(\"ripple-color\") ? this.$element.data(\"ripple-color\") : window.getComputedStyle(this.$element[0]).color;\n      return color;\n    }\n    /**\n     * Verify if the client is using a mobile device\n     */\n\n\n    _isTouch() {\n      return this.config.touchUserAgentRegex.test(navigator.userAgent);\n    }\n    /**\n     * End the animation of the ripple\n     */\n\n\n    rippleEnd() {\n      if (this.$decorator) {\n        // guard against race condition/mouse attack\n        this.$decorator.data(\"animating\", \"off\");\n\n        if (this.$decorator.data(\"mousedown\") === \"off\") {\n          this.rippleOut(this.$decorator);\n        }\n      }\n    }\n    /**\n     * Turn off the ripple effect\n     */\n\n\n    rippleOut() {\n      this.$decorator.off();\n\n      if (Util.transitionEndSupported()) {\n        this.$decorator.addClass(\"ripple-out\");\n      } else {\n        this.$decorator.animate({\n          opacity: 0\n        }, 100, () => {\n          this.$decorator.trigger(\"transitionend\");\n        });\n      }\n\n      this.$decorator.on(Util.transitionEndSelector(), () => {\n        if (this.$decorator) {\n          this.$decorator.remove();\n          this.$decorator = null;\n        }\n      });\n    }\n    /**\n     * Turn on the ripple effect\n     */\n\n\n    rippleOn() {\n      let size = this._getNewSize();\n\n      if (Util.transitionEndSupported()) {\n        this.$decorator.css({\n          \"-ms-transform\": `scale(${size})`,\n          \"-moz-transform\": `scale(${size})`,\n          \"-webkit-transform\": `scale(${size})`,\n          transform: `scale(${size})`\n        }).addClass(\"ripple-on\").data(\"animating\", \"on\").data(\"mousedown\", \"on\");\n      } else {\n        this.$decorator.animate({\n          width: Math.max(this.$element.outerWidth(), this.$element.outerHeight()) * 2,\n          height: Math.max(this.$element.outerWidth(), this.$element.outerHeight()) * 2,\n          \"margin-left\": Math.max(this.$element.outerWidth(), this.$element.outerHeight()) * -1,\n          \"margin-top\": Math.max(this.$element.outerWidth(), this.$element.outerHeight()) * -1,\n          opacity: 0.2\n        }, this.config.duration, () => {\n          this.$decorator.trigger(\"transitionend\");\n        });\n      }\n    }\n    /**\n     * Get the new size based on the element height/width and the ripple width\n     */\n\n\n    _getNewSize() {\n      return Math.max(this.$element.outerWidth(), this.$element.outerHeight()) / this.$decorator.outerWidth() * 2.5;\n    } // ------------------------------------------------------------------------\n    // static\n\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let $element = $(this);\n        let data = $element.data(DATA_KEY);\n\n        if (!data) {\n          data = new Ripples($element, config);\n          $element.data(DATA_KEY, data);\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n\n  $.fn[JQUERY_NAME] = Ripples._jQueryInterface;\n  $.fn[JQUERY_NAME].Constructor = Ripples;\n\n  $.fn[JQUERY_NAME].noConflict = () => {\n    $.fn[JQUERY_NAME] = JQUERY_NO_CONFLICT;\n    return Ripples._jQueryInterface;\n  };\n\n  return Ripples;\n})(jQuery);\n\nexport default Ripples;","map":{"version":3,"sources":["/Users/aaron/Desktop/my-app/node_modules/bootstrap-material-design/js/ripples.js"],"names":["Util","Ripples","$","NAME","DATA_KEY","JQUERY_NAME","charAt","toUpperCase","slice","JQUERY_NO_CONFLICT","fn","ClassName","CONTAINER","DECORATOR","Selector","Default","container","template","decorator","trigger","start","end","touchUserAgentRegex","duration","constructor","$element","config","extend","on","event","_onStartRipple","dispose","data","$container","$decorator","_isTouch","type","_findOrCreateContainer","relY","_getRelY","relX","_getRelX","css","left","top","_getRipplesColor","_forceStyleApplication","rippleOn","setTimeout","rippleEnd","rippleOut","length","append","find","window","getComputedStyle","opacity","wrapperOffset","offset","result","pageX","originalEvent","touches","containerOffset","pageY","color","test","navigator","userAgent","off","transitionEndSupported","addClass","animate","transitionEndSelector","remove","size","_getNewSize","transform","width","Math","max","outerWidth","outerHeight","height","_jQueryInterface","each","Constructor","noConflict","jQuery"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,CAAC,IAAI;AACpB;;;;;AAKA,QAAMC,IAAI,GAAG,SAAb;AACA,QAAMC,QAAQ,GAAI,OAAMD,IAAK,EAA7B;AACA,QAAME,WAAW,GAAI,MAAKF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BJ,IAAI,CAACK,KAAL,CAAW,CAAX,CAAc,EAAvE;AACA,QAAMC,kBAAkB,GAAGP,CAAC,CAACQ,EAAF,CAAKL,WAAL,CAA3B;AAEA,QAAMM,SAAS,GAAG;AAChBC,IAAAA,SAAS,EAAE,kBADK;AAEhBC,IAAAA,SAAS,EAAE;AAFK,GAAlB;AAKA,QAAMC,QAAQ,GAAG;AACfF,IAAAA,SAAS,EAAG,IAAGD,SAAS,CAACC,SAAU,EADpB;AAEfC,IAAAA,SAAS,EAAG,IAAGF,SAAS,CAACE,SAAU,EAFpB,CAEsB;;AAFtB,GAAjB;AAKA,QAAME,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAG,eAAcN,SAAS,CAACC,SAAU;AADpC,KADG;AAIdM,IAAAA,SAAS,EAAE;AACTD,MAAAA,QAAQ,EAAG,eAAcN,SAAS,CAACE,SAAU;AADpC,KAJG;AAOdM,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,sBADA;AAEPC,MAAAA,GAAG,EAAE;AAFE,KAPK;AAWdC,IAAAA,mBAAmB,EAAE,gEAXP;AAYdC,IAAAA,QAAQ,EAAE;AAZI,GAAhB;AAeA;;;;;;AAKA,QAAMtB,OAAN,CAAc;AACZuB,IAAAA,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAC5B,WAAKD,QAAL,GAAgBA,QAAhB,CAD4B,CAG5B;;AACA,WAAKC,MAAL,GAAcxB,CAAC,CAACyB,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBZ,OAAnB,EAA4BW,MAA5B,CAAd,CAJ4B,CAM5B;;AACA,WAAKD,QAAL,CAAcG,EAAd,CAAiB,KAAKF,MAAL,CAAYP,OAAZ,CAAoBC,KAArC,EAA4CS,KAAK,IAAI;AACnD,aAAKC,cAAL,CAAoBD,KAApB;AACD,OAFD;AAGD;;AAEDE,IAAAA,OAAO,GAAG;AACR,WAAKN,QAAL,CAAcO,IAAd,CAAmB5B,QAAnB,EAA6B,IAA7B;AACA,WAAKqB,QAAL,GAAgB,IAAhB;AACA,WAAKQ,UAAL,GAAkB,IAAlB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKR,MAAL,GAAc,IAAd;AACD,KAnBW,CAqBZ;AACA;;;AAEAI,IAAAA,cAAc,CAACD,KAAD,EAAQ;AACpB;AACA,UAAI,KAAKM,QAAL,MAAmBN,KAAK,CAACO,IAAN,KAAe,WAAtC,EAAmD;AACjD;AACD,OAJmB,CAMpB;;;AACA,WAAKC,sBAAL,GAPoB,CASpB;;;AACA,UAAIC,IAAI,GAAG,KAAKC,QAAL,CAAcV,KAAd,CAAX;;AACA,UAAIW,IAAI,GAAG,KAAKC,QAAL,CAAcZ,KAAd,CAAX,CAXoB,CAapB;;;AACA,UAAI,CAACS,IAAD,IAAS,CAACE,IAAd,EAAoB;AAClB;AACD,OAhBmB,CAkBpB;;;AACA,WAAKN,UAAL,CAAgBQ,GAAhB,CAAoB;AAClBC,QAAAA,IAAI,EAAEH,IADY;AAElBI,QAAAA,GAAG,EAAEN,IAFa;AAGlB,4BAAoB,KAAKO,gBAAL;AAHF,OAApB,EAnBoB,CAyBpB;;AACA,WAAKC,sBAAL,GA1BoB,CA4BpB;;;AACA,WAAKC,QAAL,GA7BoB,CA+BpB;;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,SAAL;AACD,OAFS,EAEP,KAAKvB,MAAL,CAAYH,QAFL,CAAV,CAhCoB,CAoCpB;;AACA,WAAKE,QAAL,CAAcG,EAAd,CAAiB,KAAKF,MAAL,CAAYP,OAAZ,CAAoBE,GAArC,EAA0C,MAAM;AAC9C,YAAI,KAAKa,UAAT,EAAqB;AACnB;AACA,eAAKA,UAAL,CAAgBF,IAAhB,CAAqB,WAArB,EAAkC,KAAlC;;AAEA,cAAI,KAAKE,UAAL,CAAgBF,IAAhB,CAAqB,WAArB,MAAsC,KAA1C,EAAiD;AAC/C,iBAAKkB,SAAL;AACD;AACF;AACF,OATD;AAUD;;AAEDb,IAAAA,sBAAsB,GAAG;AACvB,UAAI,CAAC,KAAKJ,UAAN,IAAoB,CAAC,KAAKA,UAAL,CAAgBkB,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,aAAK1B,QAAL,CAAc2B,MAAd,CAAqB,KAAK1B,MAAL,CAAYV,SAAZ,CAAsBC,QAA3C;AACA,aAAKgB,UAAL,GAAkB,KAAKR,QAAL,CAAc4B,IAAd,CAAmBvC,QAAQ,CAACF,SAA5B,CAAlB;AACD,OAJsB,CAMvB;;;AACA,WAAKqB,UAAL,CAAgBmB,MAAhB,CAAuB,KAAK1B,MAAL,CAAYR,SAAZ,CAAsBD,QAA7C;AACA,WAAKiB,UAAL,GAAkB,KAAKD,UAAL,CAAgBoB,IAAhB,CAAqBvC,QAAQ,CAACD,SAA9B,CAAlB;AACD,KAlFW,CAoFZ;;;AACAiC,IAAAA,sBAAsB,GAAG;AACvB,aAAOQ,MAAM,CAACC,gBAAP,CAAwB,KAAKrB,UAAL,CAAgB,CAAhB,CAAxB,EAA4CsB,OAAnD;AACD;AAED;;;;;AAGAf,IAAAA,QAAQ,CAACZ,KAAD,EAAQ;AACd,UAAI4B,aAAa,GAAG,KAAKxB,UAAL,CAAgByB,MAAhB,EAApB;AAEA,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAI,CAAC,KAAKxB,QAAL,EAAL,EAAsB;AACpB;AACAwB,QAAAA,MAAM,GAAG9B,KAAK,CAAC+B,KAAN,GAAcH,aAAa,CAACd,IAArC;AACD,OAHD,MAGO;AACL;AACA;AACAd,QAAAA,KAAK,GAAGA,KAAK,CAACgC,aAAd;;AAEA,YAAIhC,KAAK,CAACiC,OAAN,CAAcX,MAAd,KAAyB,CAA7B,EAAgC;AAC9BQ,UAAAA,MAAM,GAAG9B,KAAK,CAACiC,OAAN,CAAc,CAAd,EAAiBF,KAAjB,GAAyBH,aAAa,CAACd,IAAhD;AACD,SAFD,MAEO;AACLgB,UAAAA,MAAM,GAAG,KAAT;AACD;AACF;;AAED,aAAOA,MAAP;AACD;AAED;;;;;AAGApB,IAAAA,QAAQ,CAACV,KAAD,EAAQ;AACd,UAAIkC,eAAe,GAAG,KAAK9B,UAAL,CAAgByB,MAAhB,EAAtB;AACA,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAI,CAAC,KAAKxB,QAAL,EAAL,EAAsB;AACpB;;;AAGAwB,QAAAA,MAAM,GAAG9B,KAAK,CAACmC,KAAN,GAAcD,eAAe,CAACnB,GAAvC;AACD,OALD,MAKO;AACL;;;;AAIAf,QAAAA,KAAK,GAAGA,KAAK,CAACgC,aAAd;;AAEA,YAAIhC,KAAK,CAACiC,OAAN,CAAcX,MAAd,KAAyB,CAA7B,EAAgC;AAC9BQ,UAAAA,MAAM,GAAG9B,KAAK,CAACiC,OAAN,CAAc,CAAd,EAAiBE,KAAjB,GAAyBD,eAAe,CAACnB,GAAlD;AACD,SAFD,MAEO;AACLe,UAAAA,MAAM,GAAG,KAAT;AACD;AACF;;AAED,aAAOA,MAAP;AACD;AAED;;;;;AAGAd,IAAAA,gBAAgB,GAAG;AACjB,UAAIoB,KAAK,GAAG,KAAKxC,QAAL,CAAcO,IAAd,CAAmB,cAAnB,IACR,KAAKP,QAAL,CAAcO,IAAd,CAAmB,cAAnB,CADQ,GAERsB,MAAM,CAACC,gBAAP,CAAwB,KAAK9B,QAAL,CAAc,CAAd,CAAxB,EAA0CwC,KAF9C;AAGA,aAAOA,KAAP;AACD;AAED;;;;;AAGA9B,IAAAA,QAAQ,GAAG;AACT,aAAO,KAAKT,MAAL,CAAYJ,mBAAZ,CAAgC4C,IAAhC,CAAqCC,SAAS,CAACC,SAA/C,CAAP;AACD;AAED;;;;;AAGAnB,IAAAA,SAAS,GAAG;AACV,UAAI,KAAKf,UAAT,EAAqB;AACnB;AACA,aAAKA,UAAL,CAAgBF,IAAhB,CAAqB,WAArB,EAAkC,KAAlC;;AAEA,YAAI,KAAKE,UAAL,CAAgBF,IAAhB,CAAqB,WAArB,MAAsC,KAA1C,EAAiD;AAC/C,eAAKkB,SAAL,CAAe,KAAKhB,UAApB;AACD;AACF;AACF;AAED;;;;;AAGAgB,IAAAA,SAAS,GAAG;AACV,WAAKhB,UAAL,CAAgBmC,GAAhB;;AAEA,UAAIrE,IAAI,CAACsE,sBAAL,EAAJ,EAAmC;AACjC,aAAKpC,UAAL,CAAgBqC,QAAhB,CAAyB,YAAzB;AACD,OAFD,MAEO;AACL,aAAKrC,UAAL,CAAgBsC,OAAhB,CAAwB;AAAEhB,UAAAA,OAAO,EAAE;AAAX,SAAxB,EAAwC,GAAxC,EAA6C,MAAM;AACjD,eAAKtB,UAAL,CAAgBf,OAAhB,CAAwB,eAAxB;AACD,SAFD;AAGD;;AAED,WAAKe,UAAL,CAAgBN,EAAhB,CAAmB5B,IAAI,CAACyE,qBAAL,EAAnB,EAAiD,MAAM;AACrD,YAAI,KAAKvC,UAAT,EAAqB;AACnB,eAAKA,UAAL,CAAgBwC,MAAhB;AACA,eAAKxC,UAAL,GAAkB,IAAlB;AACD;AACF,OALD;AAMD;AAED;;;;;AAGAa,IAAAA,QAAQ,GAAG;AACT,UAAI4B,IAAI,GAAG,KAAKC,WAAL,EAAX;;AAEA,UAAI5E,IAAI,CAACsE,sBAAL,EAAJ,EAAmC;AACjC,aAAKpC,UAAL,CACGQ,GADH,CACO;AACH,2BAAkB,SAAQiC,IAAK,GAD5B;AAEH,4BAAmB,SAAQA,IAAK,GAF7B;AAGH,+BAAsB,SAAQA,IAAK,GAHhC;AAIHE,UAAAA,SAAS,EAAG,SAAQF,IAAK;AAJtB,SADP,EAOGJ,QAPH,CAOY,WAPZ,EAQGvC,IARH,CAQQ,WARR,EAQqB,IARrB,EASGA,IATH,CASQ,WATR,EASqB,IATrB;AAUD,OAXD,MAWO;AACL,aAAKE,UAAL,CAAgBsC,OAAhB,CACE;AACEM,UAAAA,KAAK,EACHC,IAAI,CAACC,GAAL,CACE,KAAKvD,QAAL,CAAcwD,UAAd,EADF,EAEE,KAAKxD,QAAL,CAAcyD,WAAd,EAFF,IAGI,CALR;AAMEC,UAAAA,MAAM,EACJJ,IAAI,CAACC,GAAL,CACE,KAAKvD,QAAL,CAAcwD,UAAd,EADF,EAEE,KAAKxD,QAAL,CAAcyD,WAAd,EAFF,IAGI,CAVR;AAWE,yBACEH,IAAI,CAACC,GAAL,CACE,KAAKvD,QAAL,CAAcwD,UAAd,EADF,EAEE,KAAKxD,QAAL,CAAcyD,WAAd,EAFF,IAGI,CAAC,CAfT;AAgBE,wBACEH,IAAI,CAACC,GAAL,CACE,KAAKvD,QAAL,CAAcwD,UAAd,EADF,EAEE,KAAKxD,QAAL,CAAcyD,WAAd,EAFF,IAGI,CAAC,CApBT;AAqBE1B,UAAAA,OAAO,EAAE;AArBX,SADF,EAwBE,KAAK9B,MAAL,CAAYH,QAxBd,EAyBE,MAAM;AACJ,eAAKW,UAAL,CAAgBf,OAAhB,CAAwB,eAAxB;AACD,SA3BH;AA6BD;AACF;AAED;;;;;AAGAyD,IAAAA,WAAW,GAAG;AACZ,aACEG,IAAI,CAACC,GAAL,CAAS,KAAKvD,QAAL,CAAcwD,UAAd,EAAT,EAAqC,KAAKxD,QAAL,CAAcyD,WAAd,EAArC,IACA,KAAKhD,UAAL,CAAgB+C,UAAhB,EADA,GAEA,GAHF;AAKD,KA/PW,CAiQZ;AACA;;;AAEA,WAAOG,gBAAP,CAAwB1D,MAAxB,EAAgC;AAC9B,aAAO,KAAK2D,IAAL,CAAU,YAAW;AAC1B,YAAI5D,QAAQ,GAAGvB,CAAC,CAAC,IAAD,CAAhB;AACA,YAAI8B,IAAI,GAAGP,QAAQ,CAACO,IAAT,CAAc5B,QAAd,CAAX;;AAEA,YAAI,CAAC4B,IAAL,EAAW;AACTA,UAAAA,IAAI,GAAG,IAAI/B,OAAJ,CAAYwB,QAAZ,EAAsBC,MAAtB,CAAP;AACAD,UAAAA,QAAQ,CAACO,IAAT,CAAc5B,QAAd,EAAwB4B,IAAxB;AACD;AACF,OARM,CAAP;AASD;;AA9QW;AAiRd;;;;;;;AAKA9B,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,IAAoBJ,OAAO,CAACmF,gBAA5B;AACAlF,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,EAAkBiF,WAAlB,GAAgCrF,OAAhC;;AACAC,EAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,EAAkBkF,UAAlB,GAA+B,MAAM;AACnCrF,IAAAA,CAAC,CAACQ,EAAF,CAAKL,WAAL,IAAoBI,kBAApB;AACA,WAAOR,OAAO,CAACmF,gBAAf;AACD,GAHD;;AAKA,SAAOnF,OAAP;AACD,CAvUe,EAuUbuF,MAvUa,CAAhB;;AAyUA,eAAevF,OAAf","sourcesContent":["import Util from \"./util\";\n\nconst Ripples = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = \"ripples\";\n  const DATA_KEY = `bmd.${NAME}`;\n  const JQUERY_NAME = `bmd${NAME.charAt(0).toUpperCase() + NAME.slice(1)}`;\n  const JQUERY_NO_CONFLICT = $.fn[JQUERY_NAME];\n\n  const ClassName = {\n    CONTAINER: \"ripple-container\",\n    DECORATOR: \"ripple-decorator\"\n  };\n\n  const Selector = {\n    CONTAINER: `.${ClassName.CONTAINER}`,\n    DECORATOR: `.${ClassName.DECORATOR}` //,\n  };\n\n  const Default = {\n    container: {\n      template: `<div class='${ClassName.CONTAINER}'></div>`\n    },\n    decorator: {\n      template: `<div class='${ClassName.DECORATOR}'></div>`\n    },\n    trigger: {\n      start: \"mousedown touchstart\",\n      end: \"mouseup mouseleave touchend\"\n    },\n    touchUserAgentRegex: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i,\n    duration: 500\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n  class Ripples {\n    constructor($element, config) {\n      this.$element = $element;\n\n      // console.log(`Adding ripples to ${Util.describe(this.$element)}`)  // eslint-disable-line no-console\n      this.config = $.extend(true, {}, Default, config);\n\n      // attach initial listener\n      this.$element.on(this.config.trigger.start, event => {\n        this._onStartRipple(event);\n      });\n    }\n\n    dispose() {\n      this.$element.data(DATA_KEY, null);\n      this.$element = null;\n      this.$container = null;\n      this.$decorator = null;\n      this.config = null;\n    }\n\n    // ------------------------------------------------------------------------\n    // private\n\n    _onStartRipple(event) {\n      // Verify if the user is just touching on a device and return if so\n      if (this._isTouch() && event.type === \"mousedown\") {\n        return;\n      }\n\n      // Find or create the ripple container element\n      this._findOrCreateContainer();\n\n      // Get relY and relX positions of the container element\n      let relY = this._getRelY(event);\n      let relX = this._getRelX(event);\n\n      // If relY and/or relX are false, return the event\n      if (!relY && !relX) {\n        return;\n      }\n\n      // set the location and color each time (even if element is cached)\n      this.$decorator.css({\n        left: relX,\n        top: relY,\n        \"background-color\": this._getRipplesColor()\n      });\n\n      // Make sure the ripple has the styles applied (ugly hack but it works)\n      this._forceStyleApplication();\n\n      // Turn on the ripple animation\n      this.rippleOn();\n\n      // Call the rippleEnd function when the transition 'on' ends\n      setTimeout(() => {\n        this.rippleEnd();\n      }, this.config.duration);\n\n      // Detect when the user leaves the element to cleanup if not already done?\n      this.$element.on(this.config.trigger.end, () => {\n        if (this.$decorator) {\n          // guard against race condition/mouse attack\n          this.$decorator.data(\"mousedown\", \"off\");\n\n          if (this.$decorator.data(\"animating\") === \"off\") {\n            this.rippleOut();\n          }\n        }\n      });\n    }\n\n    _findOrCreateContainer() {\n      if (!this.$container || !this.$container.length > 0) {\n        this.$element.append(this.config.container.template);\n        this.$container = this.$element.find(Selector.CONTAINER);\n      }\n\n      // always add the rippleElement, it is always removed\n      this.$container.append(this.config.decorator.template);\n      this.$decorator = this.$container.find(Selector.DECORATOR);\n    }\n\n    // Make sure the ripple has the styles applied (ugly hack but it works)\n    _forceStyleApplication() {\n      return window.getComputedStyle(this.$decorator[0]).opacity;\n    }\n\n    /**\n     * Get the relX\n     */\n    _getRelX(event) {\n      let wrapperOffset = this.$container.offset();\n\n      let result = null;\n      if (!this._isTouch()) {\n        // Get the mouse position relative to the ripple wrapper\n        result = event.pageX - wrapperOffset.left;\n      } else {\n        // Make sure the user is using only one finger and then get the touch\n        //  position relative to the ripple wrapper\n        event = event.originalEvent;\n\n        if (event.touches.length === 1) {\n          result = event.touches[0].pageX - wrapperOffset.left;\n        } else {\n          result = false;\n        }\n      }\n\n      return result;\n    }\n\n    /**\n     * Get the relY\n     */\n    _getRelY(event) {\n      let containerOffset = this.$container.offset();\n      let result = null;\n\n      if (!this._isTouch()) {\n        /**\n         * Get the mouse position relative to the ripple wrapper\n         */\n        result = event.pageY - containerOffset.top;\n      } else {\n        /**\n         * Make sure the user is using only one finger and then get the touch\n         * position relative to the ripple wrapper\n         */\n        event = event.originalEvent;\n\n        if (event.touches.length === 1) {\n          result = event.touches[0].pageY - containerOffset.top;\n        } else {\n          result = false;\n        }\n      }\n\n      return result;\n    }\n\n    /**\n     * Get the ripple color\n     */\n    _getRipplesColor() {\n      let color = this.$element.data(\"ripple-color\")\n        ? this.$element.data(\"ripple-color\")\n        : window.getComputedStyle(this.$element[0]).color;\n      return color;\n    }\n\n    /**\n     * Verify if the client is using a mobile device\n     */\n    _isTouch() {\n      return this.config.touchUserAgentRegex.test(navigator.userAgent);\n    }\n\n    /**\n     * End the animation of the ripple\n     */\n    rippleEnd() {\n      if (this.$decorator) {\n        // guard against race condition/mouse attack\n        this.$decorator.data(\"animating\", \"off\");\n\n        if (this.$decorator.data(\"mousedown\") === \"off\") {\n          this.rippleOut(this.$decorator);\n        }\n      }\n    }\n\n    /**\n     * Turn off the ripple effect\n     */\n    rippleOut() {\n      this.$decorator.off();\n\n      if (Util.transitionEndSupported()) {\n        this.$decorator.addClass(\"ripple-out\");\n      } else {\n        this.$decorator.animate({ opacity: 0 }, 100, () => {\n          this.$decorator.trigger(\"transitionend\");\n        });\n      }\n\n      this.$decorator.on(Util.transitionEndSelector(), () => {\n        if (this.$decorator) {\n          this.$decorator.remove();\n          this.$decorator = null;\n        }\n      });\n    }\n\n    /**\n     * Turn on the ripple effect\n     */\n    rippleOn() {\n      let size = this._getNewSize();\n\n      if (Util.transitionEndSupported()) {\n        this.$decorator\n          .css({\n            \"-ms-transform\": `scale(${size})`,\n            \"-moz-transform\": `scale(${size})`,\n            \"-webkit-transform\": `scale(${size})`,\n            transform: `scale(${size})`\n          })\n          .addClass(\"ripple-on\")\n          .data(\"animating\", \"on\")\n          .data(\"mousedown\", \"on\");\n      } else {\n        this.$decorator.animate(\n          {\n            width:\n              Math.max(\n                this.$element.outerWidth(),\n                this.$element.outerHeight()\n              ) * 2,\n            height:\n              Math.max(\n                this.$element.outerWidth(),\n                this.$element.outerHeight()\n              ) * 2,\n            \"margin-left\":\n              Math.max(\n                this.$element.outerWidth(),\n                this.$element.outerHeight()\n              ) * -1,\n            \"margin-top\":\n              Math.max(\n                this.$element.outerWidth(),\n                this.$element.outerHeight()\n              ) * -1,\n            opacity: 0.2\n          },\n          this.config.duration,\n          () => {\n            this.$decorator.trigger(\"transitionend\");\n          }\n        );\n      }\n    }\n\n    /**\n     * Get the new size based on the element height/width and the ripple width\n     */\n    _getNewSize() {\n      return (\n        Math.max(this.$element.outerWidth(), this.$element.outerHeight()) /\n        this.$decorator.outerWidth() *\n        2.5\n      );\n    }\n\n    // ------------------------------------------------------------------------\n    // static\n\n    static _jQueryInterface(config) {\n      return this.each(function() {\n        let $element = $(this);\n        let data = $element.data(DATA_KEY);\n\n        if (!data) {\n          data = new Ripples($element, config);\n          $element.data(DATA_KEY, data);\n        }\n      });\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  $.fn[JQUERY_NAME] = Ripples._jQueryInterface;\n  $.fn[JQUERY_NAME].Constructor = Ripples;\n  $.fn[JQUERY_NAME].noConflict = () => {\n    $.fn[JQUERY_NAME] = JQUERY_NO_CONFLICT;\n    return Ripples._jQueryInterface;\n  };\n\n  return Ripples;\n})(jQuery);\n\nexport default Ripples;\n"]},"metadata":{},"sourceType":"module"}